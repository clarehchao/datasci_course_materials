source('~/Documents/coursera/IntroDataScience/datasci_course_materials/assignment5/assignment5.r')
model_rf
source('~/Documents/coursera/IntroDataScience/datasci_course_materials/assignment5/assignment5.r')
free
del data
rm data
clear data
source('~/Documents/coursera/IntroDataScience/datasci_course_materials/assignment5/assignment5.r')
exit
quit
.q
quit()
source('~/Documents/coursera/IntroDataScience/datasci_course_materials/assignment5/assignment5.r')
gc()
source('~/Documents/coursera/IntroDataScience/datasci_course_materials/assignment5/assignment5.r')
length(truth)
length(predc_rf)
names(data_train)
names(data_train)[1:12]
source('~/Documents/coursera/IntroDataScience/datasci_course_materials/assignment5/assignment5.r')
sum(is.na(predc_rf))
sum(is.na(data_test$pop))
length(predc_rf)
length(data_test$pop)
head(predc_rf)
predc_rf(is.na(predc_rf) == TRUE)
predc_rf[is.na(predc_rf) == TRUE]
data_test[317]
data_test$pop[317]
data_test$pop[63905]
data_test$pop[45131]
data_test$pop[46471]
data_test$pop[316]
predc_rf[length(predc_rf)]
predc_rf[1]
head(predc_rf,1000)
tail(predc_rf,100)
length(predc_rf)
cols(predc_rf)
names(predc_rf)
truth = data_test$pop
truth
length(truth)
accuracy_rf = sum(data_test$pop == predc_rf,na.rm = TRUE)/nrow(data_test)
print(accuracy_rf)
sum(is.na(data_test))
sum(is.na(data_test$pop))
sum(is.na(truth))
sum(is.na(predc_rf))
head(data_train)
head(data)
head(indx)
predc_rf[,1]
predc_rf[1,]
predc_rf[1]
source('~/Documents/coursera/IntroDataScience/datasci_course_materials/assignment5/assignment5.r')
source('~/Documents/coursera/IntroDataScience/datasci_course_materials/assignment5/assignment5.r')
source('~/Documents/coursera/IntroDataScience/datasci_course_materials/assignment5/assignment5.r')
length(truth)
length(predc)
head(truth)
head(predc)
source('~/Documents/coursera/IntroDataScience/datasci_course_materials/assignment5/assignment5.r')
source('~/Documents/coursera/IntroDataScience/datasci_course_materials/assignment5/assignment5.r')
source('~/Documents/coursera/IntroDataScience/datasci_course_materials/assignment5/assignment5.r')
nrows(truth)
source('~/Documents/coursera/IntroDataScience/datasci_course_materials/assignment5/assignment5.r')
length(truth)
source('~/Documents/coursera/IntroDataScience/datasci_course_materials/assignment5/assignment5.r')
importance(model_cs)
importance(model_rf)
importance(model_svm)
table(pred = predc1, true = truth)
table(pred = predc2, true = truth)
table(pred = predc3, true = truth)
library(ggplot2)
p <- ggplot(data=data_train,aes(x=time, y=chl_big,colour=pop))+geom_point()
print(p)
p <- ggplot(data=data_train,aes(x=time, y=chl_big))+geom_point()
print(p)
p <- ggplot(data=data_train,aes(x=time, y=fsc_small))+geom_point()
print(p)
p <- ggplot(data=data_train,aes(x=time, y=fsc_perp))+geom_point()
print(p)
p <- ggplot(data=data_train,aes(x=time, y=fsc_big))+geom_point()
print(p)
p <- ggplot(data=data_train,aes(x=time, y=pe))+geom_point()
print(p)
p <- ggplot(data=data_train,aes(x=time, y=chl_small))+geom_point()
print(p)
p <- ggplot(data=data_train,aes(x=time, y=chl_big))+geom_point()
print(p)
p <- ggplot(data=data_train,aes(x=time, y=chl_big))+geom_point()
print(p)
p <- ggplot(data=data_train,aes(x=time, y=chl_big,colour=pop))+geom_point()
print(p)
p <- ggplot(data=data_train,aes(x=time, y=fsc_small,colour=pop))+geom_point()
print(p)
p <- ggplot(data=data_train,aes(x=time, y=fsc_perp,colour=pop))+geom_point()
print(p)
p <- ggplot(data=data_train,aes(x=time, y=fsc_big,colour=pop))+geom_point()
print(p)
data$file_id
data_train2 = data[data$file_id ~= 208,]
data_train2 = data[data$file_id != 208,]
length(data_train2)
dim(data_train2)
dim(data_train)
data2 = data[data$file_id ~= 208,]
set.seed(125903)
indx2 <- createDataPartition(data2$pop,p=0.5,list=FALSE,times=1)
data_train2 <- data2[indx,]
data_test2 <- data2[-indx,]
source('~/Documents/coursera/IntroDataScience/datasci_course_materials/assignment5/assignment5.r')
source('~/Documents/coursera/IntroDataScience/datasci_course_materials/assignment5/assignment5.r')
accuracy4 - 0.92024
plot(model_cs)
text(model(cs))
text(model_cs
)
summar(data)
summary(data)
mean(data_train$time)
importance(model_rf)
quit()
